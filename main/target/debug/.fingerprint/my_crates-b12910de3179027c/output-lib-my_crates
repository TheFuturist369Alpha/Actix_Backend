{"$message_type":"diagnostic","message":"unused imports: `error::ErrorBadRequest` and `post`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":19,"byte_end":41,"line_start":2,"line_end":2,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":" error::ErrorBadRequest, post, web::{Data, Json, Path}, Error, HttpResponse, Responder","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":43,"byte_end":47,"line_start":2,"line_end":2,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":" error::ErrorBadRequest, post, web::{Data, Json, Path}, Error, HttpResponse, Responder","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":19,"byte_end":49,"line_start":2,"line_end":2,"column_start":2,"column_end":32,"is_primary":true,"text":[{"text":" error::ErrorBadRequest, post, web::{Data, Json, Path}, Error, HttpResponse, Responder","highlight_start":2,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `error::ErrorBadRequest` and `post`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs:2:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m error::ErrorBadRequest, post, web::{Data, Json, Path}, Error, HttpResponse, Responder\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `actix_web::web`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\DB_Connect.rs","byte_start":4,"byte_end":18,"line_start":1,"line_end":1,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use actix_web::web;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\DB_Connect.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use actix_web::web;","highlight_start":1,"highlight_end":20},{"text":"use sqlx::{Pool, Postgres};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `actix_web::web`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\DB_Connect.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse actix_web::web;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `cookie::time::Date` and `web::Data`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\Entities.rs","byte_start":16,"byte_end":34,"line_start":1,"line_end":1,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"use actix_web::{cookie::time::Date, web::Data};","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\Entities.rs","byte_start":36,"byte_end":45,"line_start":1,"line_end":1,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use actix_web::{cookie::time::Date, web::Data};","highlight_start":37,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\Entities.rs","byte_start":0,"byte_end":49,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use actix_web::{cookie::time::Date, web::Data};","highlight_start":1,"highlight_end":48},{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `cookie::time::Date` and `web::Data`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\Entities.rs:1:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse actix_web::{cookie::time::Date, web::Data};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":2446,"byte_end":2447,"line_start":88,"line_end":88,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"            |e|{","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":2446,"byte_end":2447,"line_start":88,"line_end":88,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"            |e|{","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"_e","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `e`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs:88:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            |e|{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_e`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"module `DB_Connect` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\lib.rs","byte_start":26,"byte_end":36,"line_start":2,"line_end":2,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub mod DB_Connect;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\lib.rs","byte_start":26,"byte_end":36,"line_start":2,"line_end":2,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub mod DB_Connect;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"db_connect","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: module `DB_Connect` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\lib.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod DB_Connect;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `db_connect`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"module `Entities` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\lib.rs","byte_start":46,"byte_end":54,"line_start":3,"line_end":3,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod Entities;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\lib.rs","byte_start":46,"byte_end":54,"line_start":3,"line_end":3,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub mod Entities;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"entities","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: module `Entities` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\lib.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod Entities;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `entities`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `userId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":2171,"byte_end":2177,"line_start":79,"line_end":79,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let userId= path.into_inner();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":2171,"byte_end":2177,"line_start":79,"line_end":79,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let userId= path.into_inner();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"user_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `userId` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs:79:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let userId= path.into_inner();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `user_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `userId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":3092,"byte_end":3098,"line_start":113,"line_end":113,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let userId=path.into_inner();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":3092,"byte_end":3098,"line_start":113,"line_end":113,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let userId=path.into_inner();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"user_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `userId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs:113:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let userId=path.into_inner();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `user_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `updateData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":3127,"byte_end":3137,"line_start":114,"line_end":114,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let updateData= req.into_inner();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":3127,"byte_end":3137,"line_start":114,"line_end":114,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let updateData= req.into_inner();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"update_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `updateData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs:114:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let updateData= req.into_inner();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `update_data`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `queryBuilder` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":3262,"byte_end":3274,"line_start":119,"line_end":119,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut queryBuilder: sqlx::QueryBuilder<Postgres> =","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"C:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs","byte_start":3262,"byte_end":3274,"line_start":119,"line_end":119,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut queryBuilder: sqlx::QueryBuilder<Postgres> =","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"query_builder","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `queryBuilder` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\My RW Applications\\rust\\Actix_Demo\\my_crates\\src\\handlers.rs:119:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut queryBuilder: sqlx::QueryBuilder<Postgres> =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `query_builder`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"10 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 10 warnings emitted\u001b[0m\n\n"}
